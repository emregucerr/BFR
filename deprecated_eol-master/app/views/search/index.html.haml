- unless @suggestions.blank?
  = raw(I18n.t(:did_you_mean, :suggestions => @suggestions[0..5].map{ |s| link_to s.firstcap, search_path(:q => s) }.join(", ")))
- unless @all_results.blank?
  - previous_label = (@all_results.current_page == 1) ? '' : I18n.t(:pagination_previous_with_count, :count => @all_results.per_page)
  - next_label = (@all_results.current_page == @all_results.total_pages) ? '' : I18n.t(:pagination_next_with_count, :count => @all_results.per_page)
-# previous_label = (@all_results.current_page == 1) ? '' : I18n.t(:pagination_previous_with_count, :count => @all_results.per_page)
-# next_label = (@all_results.current_page == @all_results.total_pages) ? '' : I18n.t(:pagination_next_with_count, :count => @all_results.per_page)
.filtered_search
  - if @querystring.blank?
    .empty
      %p= I18n.t(:must_provide_search_term_error)
  - else
    .header
      - start_number = (@all_results.current_page - 1) * @all_results.per_page + 1
      - end_number = [ (start_number + @all_results.per_page - 1), @all_results.total_entries ].min
      - end_number += @attributes.count unless @attributes.blank?
      - start_number += @attributes.count if @all_results.current_page > 1
      %h3
        - if @all_results.blank?
          - if @attributes.blank? || ! search_data?
            = I18n.t(:no_results_for_search_term, search_term: @querystring)
          - else 
            = I18n.t(:data_results_only_for_search, search_term: @querystring)
        - else
          = raw(I18n.t(:pagination_range_with_count, :start_number => start_number, :end_number => end_number, :count => @combined_results_count))
      = will_paginate @all_results, |
        :previous_label => previous_label, |
        :next_label => next_label, |
        :page_links=>false
    %ul.object_list
      - if search_data? && ! @attributes.blank? && @all_results.current_page == 1 # Only show data results on the first page.
        - @attributes.each do |attribute|
          %li{:class => 'data'}= render "shared/item_summary_data_teaser", { attribute: attribute, query: @querystring }
      - @all_results.each_with_index do |result, i|
        - result_instance = result['instance']
        - unless result_instance.nil? # TODO: result_instance is sometimes nil - remove this comment if that is okay, or fix if not.
          - en_type = en_type(result_instance)
          %li{:class => en_type}
            - if ['image_map', 'image', 'video', 'sound'].include?(en_type)
              = render "shared/item_summary_media", { :item => result_instance, :en_type => en_type, :search_result => result, :is_hidden => false }
            - elsif ! en_type.blank?
              = render "shared/item_summary_#{en_type}", { :item => result_instance,
                :search_result => result }
    .footer
      = will_paginate @all_results, |
      :previous_label => previous_label, |
      :next_label => next_label, |
      :page_links=>false
