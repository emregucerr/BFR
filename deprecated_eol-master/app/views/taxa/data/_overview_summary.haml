.data_div
  %table.standard.data
    %caption.assistive= I18n.t(:data_overview_table_caption)
    - @range_data.each_with_index do |range_data, index|
      %tr
        %th
          = display_uri(range_data[:attribute], capitalize: false)
        %td
          - min_value = range_data[:min].object.round(2)
          - if range_data[:min].unit_of_measure != range_data[:max].unit_of_measure
            - uri_components = EOL::Sparql.explicit_measurement_uri_components(range_data[:min].unit_of_measure_uri)
            - min_value = min_value.to_s + " " + display_uri(uri_components)
          = raw [ min_value, display_text_for_data_point_uri(range_data[:max]) ].join(' - ')
    - unless overview_data.empty?
      - overview_data.each_with_index do |(row_representative, row_data), index|
        %tr
          %th= display_uri(row_representative.predicate_uri, capitalize: false)
          %td
            - text_for_rows = row_data[:data_point_uris].map do |data_point_uri|
              - text = display_text_for_data_point_uri(data_point_uri, link_to_overview: true, include_statistical_method: true, value_for_known_uri: data_point_uri.predicate_uri)
            - if row_data[:show_more]
              - text_for_rows << link_to(I18n.t(:show_more_row_data_link),
                taxon_data_path(@overview, toc_id: (row_representative.is_a?(KnownUri) && row_representative.toc_items.length > 0) ? row_representative.toc_items.first.id : nil,
                anchor: row_representative.is_a?(KnownUri) ? row_representative.uri : row_representative))
            = raw text_for_rows.join("<br/>")
